<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Thu, 07 Aug 2025 17:33:29 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: feedlandSocket</title>
		<dateCreated>Tue, 22 Nov 2022 20:59:25 GMT</dateCreated>
		<dateModified>Thu, 07 Aug 2025 17:33:28 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 9, 12, 15</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>138</windowTop>
		<windowLeft>703</windowLeft>
		<windowBottom>969</windowBottom>
		<windowRight>1971</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/feedlandsocket/">
			<outline text="worknotes.md" created="Tue, 18 Apr 2023 13:17:57 GMT">
				<outline text="#### 8/7/25; 8:01:33 AM by DW" created="Thu, 07 Aug 2025 12:01:31 GMT">
					<outline text="Now it's more than a demo. " created="Thu, 07 Aug 2025 12:01:34 GMT"/>
					<outline text="It's now a NPM package, and includes a demo app." created="Thu, 07 Aug 2025 14:37:07 GMT"/>
					<outline text="Changed in dependencies from &quot;websocket&quot; to &quot;ws&quot;." created="Thu, 07 Aug 2025 14:01:26 GMT"/>
					<outline text="It filters out repeated id's. FeedLand will send duplicate notices. At some point it will stop doing that, but in the meantime, let's catch them at this level. " created="Thu, 07 Aug 2025 14:38:54 GMT"/>
					</outline>
				<outline text="#### 4/18/23; 9:18:03 AM by DW " created="Tue, 18 Apr 2023 13:17:59 GMT">
					<outline text="Feedland now uses WSS, the secure version of websockets, so this code must change. " created="Tue, 18 Apr 2023 13:18:04 GMT"/>
					</outline>
				</outline>
			<outline text="package.json" created="Tue, 22 Nov 2022 21:59:38 GMT">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;feedlandsocket&quot;,"/>
					<outline text="&quot;description&quot;: &quot;A package and demo app that connects to FeedLand's websocket feature.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;feedlandsocket.js&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.5.1&quot;,"/>
					<outline text="&quot;repository&quot;: {">
						<outline text="&quot;type&quot;: &quot;git&quot;,"/>
						<outline text="&quot;url&quot;: &quot;https://github.com/scripting/feedlandSocket.git&quot;"/>
						<outline text="},"/>
						</outline>
					<outline text="&quot;files&quot;: [">
						<outline text="&quot;feedlandsocket.js&quot;,"/>
						<outline text="&quot;demo.js&quot;,"/>
						<outline text="&quot;readme.md&quot;,"/>
						<outline text="&quot;worknotes.md&quot;" created="Thu, 07 Aug 2025 14:24:57 GMT"/>
						<outline text="],"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;ws&quot;: &quot;*&quot;"/>
						<outline text="&quot;websocket&quot;: &quot;*&quot;" isComment="true"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="feedlandsocket.js" created="Tue, 22 Nov 2022 21:59:43 GMT">
				<outline text="const myVersion = &quot;0.5.1&quot;, myProductName = &quot;feedlandSocket&quot;;  " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Tue, 22 Nov 2022 21:59:53 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const websocket = require (&quot;ws&quot;);"/>
				<outline text="const websocket = require (&quot;websocket&quot;).w3cwebsocket;" isComment="true"/>
				<outline text="" created="Thu, 07 Aug 2025 12:06:11 GMT"/>
				<outline text="var config = {" created="Mon, 29 Nov 2021 15:52:16 GMT">
					<outline text="urlSocketServer: &quot;wss://feedland.org/&quot; //4/18/23 by DW " created="Mon, 21 Nov 2022 20:24:44 GMT"/>
					<outline text="};" created="Mon, 29 Nov 2021 15:52:19 GMT"/>
					</outline>
				<outline text="" created="Thu, 07 Aug 2025 12:13:11 GMT"/>
				<outline text="exports.connect = function (userOptions) { //5/25/24 by DW">
					<outline text="Changes" isComment="true" created="Sun, 04 May 2025 12:58:07 GMT">
						<outline text="8/7/25; 9:16:55 AM by DW" created="Thu, 07 Aug 2025 13:16:55 GMT">
							<outline text="Add functionality from readerland that filters out repeated messages." created="Thu, 07 Aug 2025 13:16:56 GMT"/>
							</outline>
						<outline text="5/24/25; 12:26:47 PM by DW" created="Sat, 24 May 2025 16:26:47 GMT">
							<outline text="Adapted from what's inside wpIdentity, api.js. " created="Sat, 24 May 2025 16:26:48 GMT"/>
							</outline>
						<outline text="5/4/25; 8:58:10 AM by DW" created="Sun, 04 May 2025 12:58:09 GMT">
							<outline text="When we startup do an initial checkConnection after 1/10th second. " created="Sun, 04 May 2025 12:58:10 GMT"/>
							<outline text="Then we check every 10 seconds." created="Sun, 04 May 2025 13:03:42 GMT"/>
							<outline text="I didn't like the lag at startup, having to wait 10 secs before we start the connection." created="Sun, 04 May 2025 13:04:05 GMT"/>
							<outline text="All the complexity is for when it doesn't work. What about when it does?" created="Sun, 04 May 2025 13:04:24 GMT"/>
							</outline>
						</outline>
					<outline text="var options = {" created="Sat, 24 May 2025 16:27:51 GMT">
						<outline text="flWebsocketEnabled: true," created="Sat, 24 May 2025 16:28:17 GMT"/>
						<outline text="urlFeedlandSocket: undefined," created="Sat, 24 May 2025 16:29:13 GMT"/>
						<outline text="maxRetries: 100, //when we lose a connection, we try to reconnect this many times" created="Tue, 27 May 2025 13:55:13 GMT"/>
						<outline text="ctSecsBetwRetries: 10," created="Tue, 27 May 2025 13:55:13 GMT"/>
						<outline text="initialCheckTimeout: 100, //5/4/25 by DW" created="Tue, 27 May 2025 13:55:13 GMT"/>
						<outline text="maxSecsBetwNotifications: 10.1, //a notice on the same id less than x secs apart are considered to be the same one" created="Sun, 01 Jun 2025 18:08:40 GMT"/>
						<outline text="flDebugMessages: true," created="Thu, 07 Aug 2025 14:35:50 GMT"/>
						<outline text="handleMessage: function (theCommand, thePayload) {" created="Tue, 27 May 2025 14:17:34 GMT">
							<outline text="switch (theCommand) {" created="Mon, 20 Dec 2021 16:38:54 GMT">
								<outline text="case &quot;hello&quot;:" created="Mon, 26 May 2025 14:29:34 GMT">
									<outline text="console.log (&quot;hello&quot;);" created="Tue, 27 May 2025 14:18:42 GMT"/>
									<outline text="break;" created="Tue, 27 May 2025 14:18:51 GMT"/>
									</outline>
								<outline text="}" created="Mon, 20 Dec 2021 16:38:58 GMT"/>
								</outline>
							<outline text="}" created="Tue, 27 May 2025 14:18:02 GMT"/>
							</outline>
						<outline text="};" created="Sat, 24 May 2025 16:27:55 GMT"/>
						</outline>
					<outline text="utils.mergeOptions (userOptions, options);" created="Sat, 24 May 2025 16:28:01 GMT"/>
					<outline text="" created="Thu, 07 Aug 2025 13:18:08 GMT"/>
					<outline text="var recentIds = new Object ();" created="Wed, 28 May 2025 14:11:25 GMT"/>
					<outline text="function notSeenRecently (id) {" created="Sun, 25 May 2025 17:48:05 GMT">
						<outline text="console.log (&quot;notSeenRecently: recentIds == &quot; + jsonStringify (recentIds));" isComment="true" created="Wed, 28 May 2025 14:43:25 GMT"/>
						<outline text="var flSeen = false;" created="Sun, 25 May 2025 17:48:25 GMT"/>
						<outline text="function ageOut () {" created="Wed, 28 May 2025 14:25:55 GMT">
							<outline text="var newObject = new Object ();" created="Wed, 28 May 2025 14:27:14 GMT"/>
							<outline text="for (var x in recentIds) {" created="Wed, 28 May 2025 14:27:14 GMT">
								<outline text="if (utils.secondsSince (recentIds [x]) &lt;= options.maxSecsBetwNotifications) {" created="Wed, 28 May 2025 14:27:49 GMT">
									<outline text="newObject [x] = recentIds [x];" created="Wed, 28 May 2025 14:29:03 GMT"/>
									<outline text="}" created="Wed, 28 May 2025 14:28:55 GMT"/>
									</outline>
								<outline text="}" created="Wed, 28 May 2025 14:27:42 GMT"/>
								</outline>
							<outline text="recentIds = newObject;"/>
							<outline text="}" created="Wed, 28 May 2025 14:27:10 GMT"/>
							</outline>
						<outline text="ageOut (); //remove expired ids" created="Wed, 28 May 2025 14:25:55 GMT"/>
						<outline text="for (var x in recentIds) {" created="Wed, 28 May 2025 14:27:14 GMT">
							<outline text="if (id == x) {" created="Wed, 28 May 2025 14:30:01 GMT">
								<outline text="flSeen = true;" created="Wed, 28 May 2025 14:31:09 GMT"/>
								<outline text="}" created="Wed, 28 May 2025 14:30:16 GMT"/>
								</outline>
							<outline text="}" created="Wed, 28 May 2025 14:27:42 GMT"/>
							</outline>
						<outline text="recentIds [id] = new Date ();" created="Wed, 28 May 2025 14:30:23 GMT"/>
						<outline text="return (!flSeen);" created="Wed, 28 May 2025 14:21:25 GMT"/>
						<outline text="}" created="Sun, 25 May 2025 17:48:10 GMT"/>
						</outline>
					<outline text="" created="Thu, 07 Aug 2025 13:18:09 GMT"/>
					<outline text="var ctRetries = 0, idSocketChecker;" created="Thu, 01 May 2025 20:30:06 GMT"/>
					<outline text="var ctIncomingMessages; //5/25/25 by DW" created="Sun, 25 May 2025 22:48:38 GMT"/>
					<outline text="" created="Thu, 01 May 2025 20:30:06 GMT"/>
					<outline text="if (options.flWebsocketEnabled) { //2/8/23 by DW" created="Wed, 08 Feb 2023 15:26:35 GMT">
						<outline text="var mySocket = undefined;" created="Wed, 29 Sep 2021 16:20:51 GMT"/>
						<outline text="function checkConnection () {" created="Wed, 29 Sep 2021 16:20:34 GMT">
							<outline text="if (mySocket === undefined) {">
								<outline text="mySocket = new websocket (options.urlFeedlandSocket); "/>
								<outline text="mySocket = new WebSocket (options.urlFeedlandSocket); " isComment="true"/>
								<outline text="if (options.flDebugMessages) {" created="Thu, 07 Aug 2025 14:36:11 GMT">
									<outline text="console.log (&quot;wsConnectUserToServer: socket created&quot;);" created="Sat, 24 May 2025 16:37:53 GMT"/>
									<outline text="}" created="Thu, 07 Aug 2025 14:36:16 GMT"/>
									</outline>
								<outline text="mySocket.onopen = function (evt) {">
									<outline text="ctRetries = 0; //5/1/25 by DW -- we got through" created="Thu, 01 May 2025 20:33:07 GMT"/>
									<outline text="ctIncomingMessages = 0; //5/25/25 by DW -- for debugging" created="Sun, 25 May 2025 22:49:34 GMT"/>
									<outline text="if (options.flDebugMessages) {" created="Thu, 07 Aug 2025 14:36:24 GMT">
										<outline text="console.log (&quot;wsConnectUserToServer: socket connection is open&quot;);" created="Sat, 24 May 2025 16:37:53 GMT"/>
										<outline text="}" created="Thu, 07 Aug 2025 14:36:27 GMT"/>
										</outline>
									<outline text="};"/>
									</outline>
								<outline text="mySocket.onmessage = function (evt) {">
									<outline text="function getPayload (jsontext) {" created="Mon, 21 Mar 2022 15:32:01 GMT">
										<outline text="var thePayload = undefined;" created="Mon, 21 Mar 2022 15:37:20 GMT"/>
										<outline text="try {" created="Mon, 21 Mar 2022 15:37:20 GMT">
											<outline text="thePayload = JSON.parse (jsontext);" created="Mon, 21 Mar 2022 15:37:23 GMT"/>
											<outline text="}" created="Mon, 21 Mar 2022 15:37:39 GMT"/>
											</outline>
										<outline text="catch (err) {" created="Mon, 21 Mar 2022 15:37:40 GMT">
											<outline text="}" created="Mon, 21 Mar 2022 15:37:44 GMT"/>
											</outline>
										<outline text="return (thePayload);" created="Mon, 21 Mar 2022 15:33:05 GMT"/>
										<outline text="}" created="Mon, 21 Mar 2022 15:32:14 GMT"/>
										</outline>
									<outline text="if (evt.data !== undefined) { //no error">
										<outline text="var theCommand = utils.stringNthField (evt.data, &quot;\r&quot;, 1);" created="Mon, 21 Mar 2022 15:34:02 GMT"/>
										<outline text="var jsontext = utils.stringDelete (evt.data, 1, theCommand.length + 1);" created="Mon, 21 Mar 2022 15:35:15 GMT"/>
										<outline text="var thePayload = getPayload (jsontext);" created="Mon, 21 Mar 2022 15:35:39 GMT"/>
										<outline text="" created="Thu, 07 Aug 2025 13:20:14 GMT"/>
										<outline text="var id; //8/7/25 by DW" created="Thu, 07 Aug 2025 13:26:39 GMT"/>
										<outline text="if (thePayload.item === undefined) { //it's an updatedFeed message, probably" created="Thu, 07 Aug 2025 13:26:39 GMT">
											<outline text="id = thePayload.id;" created="Thu, 07 Aug 2025 13:29:27 GMT"/>
											<outline text="}" created="Thu, 07 Aug 2025 13:26:47 GMT"/>
											</outline>
										<outline text="else {" created="Thu, 07 Aug 2025 13:29:42 GMT">
											<outline text="id = thePayload.item.id;" created="Wed, 28 May 2025 14:19:13 GMT"/>
											<outline text="}" created="Thu, 07 Aug 2025 13:29:43 GMT"/>
											</outline>
										<outline text="" created="Thu, 07 Aug 2025 13:26:40 GMT"/>
										<outline text="if (notSeenRecently (id)) {" created="Wed, 28 May 2025 14:19:14 GMT">
											<outline text="options.handleMessage (theCommand, thePayload);" created="Tue, 27 May 2025 14:19:48 GMT"/>
											<outline text="}" created="Wed, 28 May 2025 14:19:47 GMT"/>
											</outline>
										<outline text="" created="Thu, 07 Aug 2025 13:20:15 GMT"/>
										<outline text="switch (theCommand) {" isComment="true" created="Mon, 20 Dec 2021 16:38:54 GMT">
											<outline text="" created="Mon, 26 May 2025 14:29:34 GMT"/>
											<outline text="case &quot;newItems&quot;: //5/26/25 by DW" created="Mon, 26 May 2025 14:29:35 GMT">
												<outline text="thePayload.forEach (function (item) {" created="Mon, 26 May 2025 14:17:22 GMT">
													<outline text="if (item.feedUrl == urlDaveverseFeed) {" created="Mon, 26 May 2025 14:43:57 GMT">
														<outline text="console.log (nowString () + &quot;: &quot; + jsonStringify (itemToDraft (item)));" created="Mon, 26 May 2025 14:44:19 GMT"/>
														<outline text="theTimeline.addDraft (itemToDraft (item));" created="Mon, 26 May 2025 19:27:04 GMT"/>
														<outline text="}" created="Mon, 26 May 2025 14:44:04 GMT"/>
														</outline>
													<outline text="else {" created="Mon, 26 May 2025 14:45:08 GMT">
														<outline text="console.log (nowString () + &quot;: &quot; + item.id + &quot;, &quot; + item.feedUrl);" created="Mon, 26 May 2025 14:17:35 GMT"/>
														<outline text="}" created="Mon, 26 May 2025 14:45:10 GMT"/>
														</outline>
													<outline text="});" created="Mon, 26 May 2025 14:17:30 GMT"/>
													</outline>
												<outline text="break;" created="Mon, 21 Mar 2022 15:30:46 GMT"/>
												</outline>
											<outline text="" created="Mon, 26 May 2025 14:29:36 GMT"/>
											<outline text="case &quot;newItem&quot;: " created="Mon, 21 Mar 2022 15:30:32 GMT">
												<outline text="ctIncomingMessages++;" created="Sun, 25 May 2025 22:51:17 GMT"/>
												<outline text="console.log (new Date ().toLocaleTimeString () + &quot;: id == &quot; + thePayload.item.id + &quot;, &quot; + thePayload.theFeed.title + &quot; (&quot; + ctIncomingMessages + &quot;)&quot;); //5/25/25 by DW" created="Fri, 08 Jul 2022 21:06:14 GMT"/>
												<outline text="console.log (new Date ().toLocaleTimeString () + &quot;: &quot; + thePayload.theFeed.title + &quot;, id == &quot; + thePayload.item.id); //5/21/25 by DW" isComment="true" created="Fri, 08 Jul 2022 21:06:14 GMT"/>
												<outline text="if (userIsSubscribed (thePayload.theFeed.feedUrl)) { //8/29/22 by DW" isComment="true" created="Thu, 22 Jun 2023 15:04:55 GMT">
													<outline text="if (true) { //(appPrefs.flSuspendUpdates) { //6/22/23 by DW" created="Thu, 22 Jun 2023 15:05:09 GMT">
														<outline text="if (viewingRiverPage ()) {" created="Wed, 12 Jul 2023 14:33:05 GMT">
															<outline text="if (appPrefs.flLoadNewPostsButton) {" created="Wed, 27 Sep 2023 14:16:52 GMT">
																<outline text="addSuspendedUpdate (thePayload.item, thePayload.theFeed);" created="Wed, 12 Jul 2023 12:26:38 GMT"/>
																<outline text="}" created="Wed, 27 Sep 2023 14:16:55 GMT"/>
																</outline>
															<outline text="else {" created="Wed, 27 Sep 2023 14:04:22 GMT">
																<outline text="if ((globals.flMyfeedPage) || (globals.flUserFeedsPage)) { //9/27/23 by DW" created="Wed, 27 Sep 2023 14:08:00 GMT">
																	<outline text="newRiverItem (thePayload.item, thePayload.theFeed);" created="Thu, 24 Mar 2022 17:24:08 GMT"/>
																	<outline text="updateFeedlistFeed (thePayload.theFeed); " created="Fri, 08 Jul 2022 14:14:08 GMT"/>
																	<outline text="}" created="Wed, 27 Sep 2023 14:08:02 GMT"/>
																	</outline>
																<outline text="}" created="Wed, 27 Sep 2023 14:04:25 GMT"/>
																</outline>
															<outline text="}" created="Wed, 12 Jul 2023 14:33:09 GMT"/>
															</outline>
														<outline text="}" created="Thu, 22 Jun 2023 15:05:12 GMT"/>
														</outline>
													<outline text="else {" created="Thu, 22 Jun 2023 15:05:13 GMT">
														<outline text="newRiverItem (thePayload.item, thePayload.theFeed);" created="Thu, 24 Mar 2022 17:24:08 GMT"/>
														<outline text="updateFeedlistFeed (thePayload.theFeed); //7/12/22 by DW -- make sure the feedlist knows the feed updated" created="Fri, 08 Jul 2022 14:14:08 GMT"/>
														<outline text="}" created="Thu, 22 Jun 2023 15:05:14 GMT"/>
														</outline>
													<outline text="newNewsboxItem (thePayload.item, thePayload.theFeed); //8/1/22 by DW -- ditto for the newsbox" created="Wed, 27 Jul 2022 21:05:16 GMT"/>
													<outline text="}" created="Thu, 22 Jun 2023 15:05:02 GMT"/>
													</outline>
												<outline text="if (!appPrefs.flSuspendUpdates) { //12/8/22 by DW" isComment="true" created="Thu, 08 Dec 2022 21:24:16 GMT">
													<outline text="if (userIsSubscribed (thePayload.theFeed.feedUrl)) { //8/29/22 by DW" created="Mon, 29 Aug 2022 16:59:25 GMT">
														<outline text="newRiverItem (thePayload.item, thePayload.theFeed);" created="Thu, 24 Mar 2022 17:24:08 GMT"/>
														<outline text="if (!appPrefs.flBlockUpdatesToFeedList) { //9/1/22 by DW" created="Thu, 01 Sep 2022 15:19:23 GMT">
															<outline text="updateFeedlistFeed (thePayload.theFeed); //7/12/22 by DW -- make sure the feedlist knows the feed updated" created="Fri, 08 Jul 2022 14:14:08 GMT"/>
															<outline text="}" created="Thu, 01 Sep 2022 15:19:36 GMT"/>
															</outline>
														<outline text="newNewsboxItem (thePayload.item, thePayload.theFeed); //8/1/22 by DW -- ditto for the newsbox" created="Wed, 27 Jul 2022 21:05:16 GMT"/>
														<outline text="}" created="Mon, 29 Aug 2022 16:59:28 GMT"/>
														</outline>
													<outline text="}" created="Thu, 08 Dec 2022 21:24:21 GMT"/>
													</outline>
												<outline text="break;" created="Mon, 21 Mar 2022 15:30:46 GMT"/>
												</outline>
											<outline text="case &quot;updatedItem&quot;: " isComment="true" created="Mon, 21 Mar 2022 15:30:32 GMT">
												<outline text="updatedRiverItem (thePayload.item); //12/28/22 by DW" created="Thu, 24 Mar 2022 16:30:44 GMT"/>
												<outline text="if (userIsSubscribed (thePayload.item.feedUrl)) { //10/23/22 by DW" isComment="true" created="Tue, 30 Aug 2022 16:35:55 GMT">
													<outline text="updatedRiverItem (thePayload.item);" created="Thu, 24 Mar 2022 16:30:44 GMT"/>
													<outline text="}" created="Tue, 30 Aug 2022 16:36:04 GMT"/>
													</outline>
												<outline text="break;" created="Mon, 21 Mar 2022 15:30:46 GMT"/>
												</outline>
											<outline text="case &quot;updatedFeed&quot;:" isComment="true" created="Fri, 01 Apr 2022 14:22:53 GMT">
												<outline text="if (true) { //(!appPrefs.flSuspendUpdates) { //12/8/22 by DW" created="Fri, 09 Dec 2022 17:43:22 GMT">
													<outline text="if (userIsSubscribed (thePayload.feedUrl)) { //8/29/22 by DW " created="Mon, 29 Aug 2022 16:59:51 GMT">
														<outline text="updatedFeed (thePayload); //update the feed if the feedinfo page is visible and this is the feed" created="Fri, 01 Apr 2022 14:23:14 GMT"/>
														<outline text="if (viewingFeedlistPage ()) {" created="Wed, 12 Jul 2023 14:33:37 GMT">
															<outline text="addSuspendedUpdate (undefined, thePayload);" created="Wed, 12 Jul 2023 12:26:38 GMT"/>
															<outline text="}" created="Wed, 12 Jul 2023 14:33:43 GMT"/>
															</outline>
														<outline text="updateFeedlistFeed (thePayload); //7/8/22 by DW" isComment="true" created="Fri, 08 Jul 2022 14:14:08 GMT"/>
														<outline text="if (!appPrefs.flBlockUpdatesToFeedList) { //9/1/22 by DW" isComment="true" created="Thu, 01 Sep 2022 15:20:05 GMT">
															<outline text="updateFeedlistFeed (thePayload); //7/8/22 by DW" created="Fri, 08 Jul 2022 14:14:08 GMT"/>
															<outline text="}" created="Thu, 01 Sep 2022 15:20:06 GMT"/>
															</outline>
														<outline text="}" created="Mon, 29 Aug 2022 16:59:56 GMT"/>
														</outline>
													<outline text="}" created="Fri, 09 Dec 2022 17:43:23 GMT"/>
													</outline>
												<outline text="break;" created="Fri, 01 Apr 2022 14:23:00 GMT"/>
												</outline>
											<outline text="case &quot;deletedItem&quot;: " isComment="true" created="Mon, 21 Mar 2022 15:30:32 GMT">
												<outline text="deleteRiverItem (thePayload);" created="Thu, 24 Mar 2022 17:24:08 GMT"/>
												<outline text="break;" created="Mon, 21 Mar 2022 15:30:46 GMT"/>
												</outline>
											<outline text="case &quot;goodnight&quot;: //10/21/22 by DW" isComment="true" created="Mon, 20 Dec 2021 16:38:59 GMT">
												<outline text="if (flWatchSocketForOtherCopies) { " created="Mon, 20 Dec 2021 16:33:07 GMT">
													<outline text="var msg = &quot;FeedLand is running in another tab. You must reload this one, or -- you can safely close it.&quot;;" created="Mon, 20 Dec 2021 16:49:37 GMT"/>
													<outline text="alertDialog (msg, function () {" created="Mon, 20 Dec 2021 16:39:09 GMT">
														<outline text="location.reload (true);" created="Mon, 20 Dec 2021 16:47:54 GMT"/>
														<outline text="});" created="Mon, 20 Dec 2021 16:49:49 GMT"/>
														</outline>
													<outline text="}" created="Mon, 20 Dec 2021 16:33:09 GMT"/>
													</outline>
												<outline text="break;" created="Mon, 20 Dec 2021 16:39:04 GMT"/>
												</outline>
											<outline text="}" created="Mon, 20 Dec 2021 16:38:58 GMT"/>
											</outline>
										<outline text="}"/>
										</outline>
									<outline text="};"/>
									</outline>
								<outline text="mySocket.onclose = function (evt) {">
									<outline text="mySocket = undefined;"/>
									<outline text="if (ctRetries++ &gt;= options.maxRetries) { //5/1/25 by DW" created="Thu, 01 May 2025 20:36:57 GMT">
										<outline text="clearInterval (idSocketChecker);"/>
										<outline text="}" created="Thu, 01 May 2025 20:37:21 GMT"/>
										</outline>
									<outline text="};"/>
									</outline>
								<outline text="mySocket.onerror = function (evt) {">
									<outline text="console.log (&quot;wsConnectToServer: socket received an error.&quot;);" created="Wed, 31 Mar 2021 14:26:24 GMT"/>
									<outline text="};"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}" created="Wed, 29 Sep 2021 16:20:43 GMT"/>
							</outline>
						<outline text="setTimeout (function () { //5/4/25 by DW">
							<outline text="checkConnection ();" created="Thu, 01 May 2025 20:30:54 GMT"/>
							<outline text="idSocketChecker = setInterval (checkConnection, 1000 * options.ctSecsBetwRetries);" created="Wed, 29 Sep 2021 16:20:35 GMT"/>
							<outline text="console.log (&quot;wsConnectToServer: idSocketChecker == &quot; + idSocketChecker);" isComment="true"/>
							<outline text="}, options.initialCheckTimeout);"/>
							</outline>
						<outline text="}" created="Wed, 08 Feb 2023 15:26:39 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Thu, 07 Aug 2025 12:13:11 GMT"/>
				<outline text="" created="Thu, 07 Aug 2025 12:13:12 GMT"/>
				</outline>
			<outline text="demo:demo.js" created="Thu, 07 Aug 2025 14:26:51 GMT">
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const feedlandSocket = require (&quot;feedlandsocket&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const feedlandSocket = require (&quot;../feedlandsocket.js&quot;);" isComment="true" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="" created="Thu, 07 Aug 2025 14:27:17 GMT"/>
				<outline text="function handleMessage (theCommand, thePayload) {" created="Thu, 07 Aug 2025 12:11:12 GMT">
					<outline text="function nowstring () {" created="Thu, 07 Aug 2025 12:40:44 GMT">
						<outline text="return (new Date ().toLocaleTimeString ());" created="Thu, 07 Aug 2025 12:40:49 GMT"/>
						<outline text="}" created="Thu, 07 Aug 2025 12:40:50 GMT"/>
						</outline>
					<outline text="function itemToJson (theItem) {" created="Thu, 07 Aug 2025 12:46:58 GMT">
						<outline text="{" isComment="true">
							<outline text="&quot;feedUrl&quot;: &quot;https://mastodon.social/tags/macos.rss&quot;,"/>
							<outline text="&quot;guid&quot;: &quot;https://social.heise.de/@heiseonlineenglish/114987340966642863&quot;,"/>
							<outline text="&quot;link&quot;: &quot;https://social.heise.de/@heiseonlineenglish/114987340966642863&quot;,"/>
							<outline text="&quot;description&quot;: &quot;&lt;p&gt;macOS 15.7 is apparently coming quickly&lt;/p&gt;&lt;p&gt;Developers have briefly been given access to a release candidate of macOS 15.7. However, macOS 15.6 is still very fresh.&lt;/p&gt;&lt;p&gt;https://www.heise.de/en/news/macOS-15-7-is-apparently-coming-quickly-10512996.html?wt_mc=sm.red.ho.mastodon.mastodon.md_beitraege.md_beitraege&amp;amp;utm_source=mastodon&lt;/p&gt;&lt;p&gt;#Apple #IT #Mac #macOS #Mobiles #Updates #news&lt;/p&gt;&quot;,"/>
							<outline text="&quot;id&quot;: 26935309,"/>
							<outline text="&quot;pubDate&quot;: &quot;Thu, 07 Aug 2025 11:53:00 GMT&quot;,"/>
							<outline text="&quot;whenReceived&quot;: &quot;Thu, 07 Aug 2025 12:46:40 GMT&quot;,"/>
							<outline text="&quot;whenUpdated&quot;: &quot;Thu, 07 Aug 2025 12:46:40 GMT&quot;,"/>
							<outline text="&quot;likes&quot;: [],"/>
							<outline text="&quot;ctLikes&quot;: 0"/>
							<outline text="}"/>
							</outline>
						<outline text="var briefObject = new Object ();" created="Thu, 07 Aug 2025 12:47:51 GMT"/>
						<outline text="function copyProp (name) {" created="Thu, 07 Aug 2025 12:47:51 GMT">
							<outline text="if (theItem [name] !== undefined) {" created="Thu, 07 Aug 2025 12:49:48 GMT">
								<outline text="briefObject [name] = theItem [name];" created="Thu, 07 Aug 2025 12:49:58 GMT"/>
								<outline text="}" created="Thu, 07 Aug 2025 12:50:15 GMT"/>
								</outline>
							<outline text="}" created="Thu, 07 Aug 2025 12:50:16 GMT"/>
							</outline>
						<outline text="copyProp (&quot;id&quot;);" created="Thu, 07 Aug 2025 12:50:25 GMT"/>
						<outline text="copyProp (&quot;feedUrl&quot;);" created="Thu, 07 Aug 2025 12:50:25 GMT"/>
						<outline text="copyProp (&quot;title&quot;);" created="Thu, 07 Aug 2025 12:50:25 GMT"/>
						<outline text="copyProp (&quot;pubDate&quot;);" created="Thu, 07 Aug 2025 12:50:25 GMT"/>
						<outline text="copyProp (&quot;whenReceived&quot;);" created="Thu, 07 Aug 2025 12:50:25 GMT"/>
						<outline text="return (utils.jsonStringify (briefObject));" created="Thu, 07 Aug 2025 12:51:37 GMT"/>
						<outline text="}" created="Thu, 07 Aug 2025 12:47:08 GMT"/>
						</outline>
					<outline text="function handleNewItem (theItem) {" created="Thu, 07 Aug 2025 12:33:03 GMT">
						<outline text="console.log (&quot;\n&quot; + nowstring () + &quot;: new item == &quot; + itemToJson (theItem));" created="Thu, 07 Aug 2025 12:35:34 GMT"/>
						<outline text="}" created="Thu, 07 Aug 2025 12:35:06 GMT"/>
						</outline>
					<outline text="function handleUpdatedItem (theItem) {" created="Thu, 07 Aug 2025 12:33:03 GMT">
						<outline text="console.log (&quot;\n&quot; + nowstring () + &quot;: updated item == &quot; + itemToJson (theItem));" created="Thu, 07 Aug 2025 12:35:34 GMT"/>
						<outline text="}" created="Thu, 07 Aug 2025 12:35:06 GMT"/>
						</outline>
					<outline text="switch (theCommand) {" created="Mon, 20 Dec 2021 16:38:54 GMT">
						<outline text="case &quot;newItem&quot;: " created="Mon, 21 Mar 2022 15:30:32 GMT">
							<outline text="handleNewItem (thePayload.item);" created="Thu, 07 Aug 2025 12:34:35 GMT"/>
							<outline text="break;" created="Mon, 21 Mar 2022 15:30:46 GMT"/>
							</outline>
						<outline text="case &quot;updatedItem&quot;: " isComment="true" created="Mon, 21 Mar 2022 15:30:32 GMT">
							<outline text="handleUpdatedItem (thePayload.item);" created="Thu, 07 Aug 2025 12:37:07 GMT"/>
							<outline text="break;" created="Thu, 07 Aug 2025 12:37:31 GMT"/>
							</outline>
						<outline text="}" created="Mon, 20 Dec 2021 16:38:58 GMT"/>
						</outline>
					<outline text="}" created="Thu, 07 Aug 2025 12:11:35 GMT"/>
					</outline>
				<outline text="" created="Thu, 07 Aug 2025 14:30:50 GMT"/>
				<outline text="var config = {" created="Thu, 07 Aug 2025 14:30:50 GMT">
					<outline text="urlFeedlandSocket: &quot;wss://feedland.org/&quot; " created="Mon, 21 Nov 2022 20:24:44 GMT"/>
					<outline text="};" created="Thu, 07 Aug 2025 14:30:57 GMT"/>
					</outline>
				<outline text="" created="Thu, 07 Aug 2025 14:27:29 GMT"/>
				<outline text="utils.readConfig (&quot;config.json&quot;, config, function () {" created="Thu, 07 Aug 2025 13:12:18 GMT">
					<outline text="console.log (&quot;\nconfig == &quot; + utils.jsonStringify (config) + &quot;\n&quot;);" created="Thu, 07 Aug 2025 13:12:33 GMT"/>
					<outline text="const options = {" created="Thu, 07 Aug 2025 12:09:29 GMT">
						<outline text="urlFeedlandSocket: config.urlFeedlandSocket," created="Thu, 07 Aug 2025 12:09:49 GMT"/>
						<outline text="handleMessage" created="Thu, 07 Aug 2025 12:11:12 GMT"/>
						<outline text="};" created="Thu, 07 Aug 2025 12:09:34 GMT"/>
						</outline>
					<outline text="feedlandSocket.connect (options);" created="Tue, 22 Nov 2022 22:07:01 GMT"/>
					<outline text="});" created="Thu, 07 Aug 2025 13:12:19 GMT"/>
					</outline>
				<outline text="" created="Thu, 07 Aug 2025 14:27:17 GMT"/>
				</outline>
			<outline text="demo:package.json" created="Tue, 22 Nov 2022 21:59:38 GMT">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;demo&quot;,"/>
					<outline text="&quot;description&quot;: &quot;An app that demo's feedlandsocket package.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;demo.js&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;feedlandsocket&quot;: &quot;*&quot;"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="snapshots/august2025/feedlandsocket.js" created="Thu, 07 Aug 2025 12:03:11 GMT">
				<outline text="const myVersion = &quot;0.4.1&quot;, myProductName = &quot;feedlandSocket&quot;;  " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Tue, 22 Nov 2022 21:59:53 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const websocket = require (&quot;websocket&quot;).w3cwebsocket;"/>
				<outline text="" created="Tue, 22 Nov 2022 22:10:26 GMT"/>
				<outline text="var config = {" created="Mon, 29 Nov 2021 15:52:16 GMT">
					<outline text="urlSocketServer: &quot;wss://feedland.org/&quot; //4/18/23 by DW " created="Mon, 21 Nov 2022 20:24:44 GMT"/>
					<outline text="urlSocketServer: &quot;ws://feedland.org:1466/&quot; " isComment="true" created="Mon, 21 Nov 2022 20:24:44 GMT"/>
					<outline text="};" created="Mon, 29 Nov 2021 15:52:19 GMT"/>
					</outline>
				<outline text="" created="Tue, 22 Nov 2022 22:05:41 GMT"/>
				<outline text="function wsConnectUserToServer (itemReceivedCallback) {">
					<outline text="Changes" isComment="true" created="Sun, 16 Oct 2022 13:29:31 GMT">
						<outline text="10/29/22; 11:07:01 AM by DW" created="Sat, 29 Oct 2022 15:07:01 GMT">
							<outline text="Only send initial message to server if we're signed in." created="Sat, 29 Oct 2022 15:07:01 GMT"/>
							</outline>
						<outline text="10/23/22; 10:27:57 AM by DW" created="Sun, 23 Oct 2022 14:27:57 GMT">
							<outline text="I went back on the change of the 16th. What's really needed is to see if the feed the update came from is part of the river currently being displayed, not whether the user is subscribed. I just got a bunch of items added to a news page I was looking at that weren't part of its set, because of the change. It's better to err on the side of not adding something dynamically, than adding something that isn't part of the set. " created="Sun, 23 Oct 2022 14:27:58 GMT"/>
							</outline>
						<outline text="10/16/22; 9:29:33 AM by DW" created="Sun, 16 Oct 2022 13:29:33 GMT">
							<outline text="When receiving an updated item message, we can't rely on the user being subscribed because there are now rivers that have items that the user might not be subscribed to, such as the hotlist and everything rivers. Or other people's rivers! " created="Sun, 16 Oct 2022 13:29:34 GMT"/>
							</outline>
						</outline>
					<outline text="var mySocket = undefined;" created="Wed, 29 Sep 2021 16:20:51 GMT"/>
					<outline text="function checkConnection () {" created="Wed, 29 Sep 2021 16:20:34 GMT">
						<outline text="if (mySocket === undefined) {">
							<outline text="mySocket = new websocket (config.urlSocketServer); "/>
							<outline text="mySocket.onopen = function (evt) {">
								<outline text="if (userIsSignedIn ()) { //10/29/22 by DW" isComment="true" created="Sat, 29 Oct 2022 15:06:21 GMT">
									<outline text="var msg = &quot;user &quot; + localStorage.twOauthToken + &quot; &quot; + localStorage.twOauthTokenSecret;" created="Wed, 29 Sep 2021 16:28:20 GMT"/>
									<outline text="console.log (&quot;wsConnectToServer: msg == &quot; + msg);" isComment="true"/>
									<outline text="mySocket.send (msg);"/>
									<outline text="}" created="Sat, 29 Oct 2022 15:06:27 GMT"/>
									</outline>
								<outline text="};"/>
								</outline>
							<outline text="mySocket.onmessage = function (evt) {">
								<outline text="function getPayload (jsontext) {" created="Mon, 21 Mar 2022 15:32:01 GMT">
									<outline text="var thePayload = undefined;" created="Mon, 21 Mar 2022 15:37:20 GMT"/>
									<outline text="try {" created="Mon, 21 Mar 2022 15:37:20 GMT">
										<outline text="thePayload = JSON.parse (jsontext);" created="Mon, 21 Mar 2022 15:37:23 GMT"/>
										<outline text="}" created="Mon, 21 Mar 2022 15:37:39 GMT"/>
										</outline>
									<outline text="catch (err) {" created="Mon, 21 Mar 2022 15:37:40 GMT">
										<outline text="}" created="Mon, 21 Mar 2022 15:37:44 GMT"/>
										</outline>
									<outline text="return (thePayload);" created="Mon, 21 Mar 2022 15:33:05 GMT"/>
									<outline text="}" created="Mon, 21 Mar 2022 15:32:14 GMT"/>
									</outline>
								<outline text="if (evt.data !== undefined) { //no error">
									<outline text="var theCommand = utils.stringNthField (evt.data, &quot;\r&quot;, 1);" created="Mon, 21 Mar 2022 15:34:02 GMT"/>
									<outline text="var jsontext = utils.stringDelete (evt.data, 1, theCommand.length + 1);" created="Mon, 21 Mar 2022 15:35:15 GMT"/>
									<outline text="var thePayload = getPayload (jsontext);" created="Mon, 21 Mar 2022 15:35:39 GMT"/>
									<outline text="console.log (&quot;wsConnectToServer: theCommand == &quot; + theCommand + &quot;, thePayload == &quot; + jsonStringify (thePayload));" isComment="true"/>
									<outline text="switch (theCommand) {" created="Mon, 20 Dec 2021 16:38:54 GMT">
										<outline text="case &quot;newItem&quot;: " created="Mon, 21 Mar 2022 15:30:32 GMT">
											<outline text="itemReceivedCallback (thePayload);" created="Mon, 21 Nov 2022 21:02:53 GMT"/>
											<outline text="break;" created="Mon, 21 Mar 2022 15:30:46 GMT"/>
											</outline>
										<outline text="}" created="Mon, 20 Dec 2021 16:38:58 GMT"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="};"/>
								</outline>
							<outline text="mySocket.onclose = function (evt) {">
								<outline text="mySocket = undefined;"/>
								<outline text="};"/>
								</outline>
							<outline text="mySocket.onerror = function (evt) {">
								<outline text="console.log (&quot;wsConnectToServer: socket received an error.&quot;);" isComment="true" created="Wed, 31 Mar 2021 14:26:24 GMT"/>
								<outline text="};"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}" created="Wed, 29 Sep 2021 16:20:43 GMT"/>
						</outline>
					<outline text="setInterval (checkConnection, 1000);" created="Wed, 29 Sep 2021 16:20:35 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Tue, 22 Nov 2022 22:30:48 GMT"/>
				<outline text="wsConnectUserToServer (function (thePayload) {" created="Tue, 22 Nov 2022 22:07:01 GMT">
					<outline text="console.log (new Date ().toLocaleTimeString () + &quot;: title == &quot; + thePayload.theFeed.title + &quot;, feedUrl == &quot; + thePayload.theFeed.feedUrl);" created="Fri, 08 Jul 2022 21:06:14 GMT"/>
					<outline text="});" created="Tue, 22 Nov 2022 22:07:28 GMT"/>
					</outline>
				</outline>
			<outline text="snapshots/august2025/readme.md" created="Thu, 07 Aug 2025 12:04:48 GMT">
				<outline text="# August 2025 snapshot" created="Thu, 07 Aug 2025 12:04:54 GMT">
					<outline text="I've done a rewrite to turn it into a package you can use in other apps. That was the right way to go. " created="Thu, 07 Aug 2025 12:05:04 GMT"/>
					<outline text="This version preserves the simpler demo app that was here before August 2025. But please don't deploy an app using this code. It had problems that were fixed in the August 2025 release. " created="Thu, 07 Aug 2025 12:05:22 GMT"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Tue, 22 Nov 2022 21:59:57 GMT">
				<outline text="# feedlandSocket" created="Tue, 22 Nov 2022 22:00:00 GMT">
					<outline text="A Node.js package that connects to FeedLand's websocket interface. " created="Tue, 22 Nov 2022 22:15:16 GMT"/>
					<outline text="Your app can get notifications for new and updated feed items." created="Thu, 07 Aug 2025 14:41:23 GMT"/>
					</outline>
				<outline text="### Background" created="Tue, 22 Nov 2022 22:16:00 GMT">
					<outline text="While FeedLand is reading feeds, it's sending a constant stream of JavaScript objects to each user via websockets." created="Tue, 22 Nov 2022 22:16:04 GMT"/>
					<outline text="This is how it updates feeds in realtime. " created="Tue, 22 Nov 2022 22:17:06 GMT"/>
					<outline text="This service is also available to applications running in any environment that supports the W3C standard websockets." created="Tue, 22 Nov 2022 22:17:24 GMT"/>
					</outline>
				<outline text="### How to use" created="Tue, 22 Nov 2022 22:17:54 GMT">
					<outline text="Download the repo, run &lt;i&gt;NPM install&lt;/i&gt; in the folder and then run the app." created="Tue, 22 Nov 2022 22:18:02 GMT">
						<outline text="`node demo.js`" created="Tue, 22 Nov 2022 22:18:30 GMT"/>
						</outline>
					<outline text="Every time FeedLand finds a new item, you'll see a message over the websocket pipe with a payload that includes the item and information about the feed it came from. " created="Tue, 22 Nov 2022 22:19:12 GMT"/>
					</outline>
				<outline text="### Video demo" created="Thu, 07 Aug 2025 17:33:09 GMT">
					<outline text="I recorded a &lt;a href=&quot;https://www.youtube.com/watch?v=_Q-ks3uytZI&quot;&gt;video demo&lt;/a&gt; showing what it looks like if you'd like to see before downloading and running the software. " created="Thu, 07 Aug 2025 14:42:13 GMT"/>
					<outline text="Also includes random commentary from your humble programmer. :-)" created="Thu, 07 Aug 2025 17:33:23 GMT"/>
					</outline>
				</outline>
			<outline text="config.json" isComment="true" created="Thu, 07 Aug 2025 13:00:13 GMT">
				<outline text="{" created="Thu, 07 Aug 2025 13:00:16 GMT">
					<outline text="}" created="Thu, 07 Aug 2025 13:00:17 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Tue, 22 Nov 2022 22:00:01 GMT">
			<outline text="nodeEditorSuite.utilities.buildIFeedlandSocket ()" created="Tue, 22 Nov 2022 22:00:04 GMT"/>
			</outline>
		</body>
	</opml>
