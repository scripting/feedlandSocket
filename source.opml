<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Tue, 18 Apr 2023 13:31:08 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes http://drummer.scripting.com. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: feedlandSocket</title>
		<dateCreated>Tue, 22 Nov 2022 20:59:25 GMT</dateCreated>
		<dateModified>Tue, 18 Apr 2023 13:31:08 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 6, 13, 18, 25, 28, 29, 31, 35, 36, 40</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>129</windowTop>
		<windowLeft>463</windowLeft>
		<windowBottom>960</windowBottom>
		<windowRight>1731</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/feedlandsocket/">
			<outline text="worknotes.md" created="Tue, 18 Apr 2023 13:17:57 GMT">
				<outline text="#### 4/18/23; 9:18:03 AM by DW" created="Tue, 18 Apr 2023 13:17:59 GMT">
					<outline text="Feedland now uses WSS, the secure version of websockets, so this code must change. " created="Tue, 18 Apr 2023 13:18:04 GMT"/>
					</outline>
				</outline>
			<outline text="package.json" created="Tue, 22 Nov 2022 21:59:38 GMT">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;feedlandsocket&quot;,"/>
					<outline text="&quot;description&quot;: &quot;A demo app that connects to FeedLand's websocket feature.&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;feedlandsocket.js&quot;,"/>
					<outline text="&quot;license&quot;: &quot;MIT&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.1&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;websocket&quot;: &quot;*&quot;"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="feedlandsocket.js" created="Tue, 22 Nov 2022 21:59:43 GMT">
				<outline text="const myVersion = &quot;0.4.1&quot;, myProductName = &quot;feedlandSocket&quot;; " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Tue, 22 Nov 2022 21:59:53 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const websocket = require (&quot;websocket&quot;).w3cwebsocket;"/>
				<outline text="" created="Tue, 22 Nov 2022 22:10:26 GMT"/>
				<outline text="var config = {" created="Mon, 29 Nov 2021 15:52:16 GMT">
					<outline text="urlSocketServer: &quot;wss://feedland.org/&quot; //4/18/23 by DW " created="Mon, 21 Nov 2022 20:24:44 GMT"/>
					<outline text="urlSocketServer: &quot;ws://feedland.org:1466/&quot; " isComment="true" created="Mon, 21 Nov 2022 20:24:44 GMT"/>
					<outline text="};" created="Mon, 29 Nov 2021 15:52:19 GMT"/>
					</outline>
				<outline text="" created="Tue, 22 Nov 2022 22:05:41 GMT"/>
				<outline text="function wsConnectUserToServer (itemReceivedCallback) {">
					<outline text="Changes" isComment="true" created="Sun, 16 Oct 2022 13:29:31 GMT">
						<outline text="10/29/22; 11:07:01 AM by DW" created="Sat, 29 Oct 2022 15:07:01 GMT">
							<outline text="Only send initial message to server if we're signed in." created="Sat, 29 Oct 2022 15:07:01 GMT"/>
							</outline>
						<outline text="10/23/22; 10:27:57 AM by DW" created="Sun, 23 Oct 2022 14:27:57 GMT">
							<outline text="I went back on the change of the 16th. What's really needed is to see if the feed the update came from is part of the river currently being displayed, not whether the user is subscribed. I just got a bunch of items added to a news page I was looking at that weren't part of its set, because of the change. It's better to err on the side of not adding something dynamically, than adding something that isn't part of the set. " created="Sun, 23 Oct 2022 14:27:58 GMT"/>
							</outline>
						<outline text="10/16/22; 9:29:33 AM by DW" created="Sun, 16 Oct 2022 13:29:33 GMT">
							<outline text="When receiving an updated item message, we can't rely on the user being subscribed because there are now rivers that have items that the user might not be subscribed to, such as the hotlist and everything rivers. Or other people's rivers! " created="Sun, 16 Oct 2022 13:29:34 GMT"/>
							</outline>
						</outline>
					<outline text="var mySocket = undefined;" created="Wed, 29 Sep 2021 16:20:51 GMT"/>
					<outline text="function checkConnection () {" created="Wed, 29 Sep 2021 16:20:34 GMT">
						<outline text="if (mySocket === undefined) {">
							<outline text="mySocket = new websocket (config.urlSocketServer); "/>
							<outline text="mySocket.onopen = function (evt) {">
								<outline text="if (userIsSignedIn ()) { //10/29/22 by DW" isComment="true" created="Sat, 29 Oct 2022 15:06:21 GMT">
									<outline text="var msg = &quot;user &quot; + localStorage.twOauthToken + &quot; &quot; + localStorage.twOauthTokenSecret;" created="Wed, 29 Sep 2021 16:28:20 GMT"/>
									<outline text="console.log (&quot;wsConnectToServer: msg == &quot; + msg);" isComment="true"/>
									<outline text="mySocket.send (msg);"/>
									<outline text="}" created="Sat, 29 Oct 2022 15:06:27 GMT"/>
									</outline>
								<outline text="};"/>
								</outline>
							<outline text="mySocket.onmessage = function (evt) {">
								<outline text="function getPayload (jsontext) {" created="Mon, 21 Mar 2022 15:32:01 GMT">
									<outline text="var thePayload = undefined;" created="Mon, 21 Mar 2022 15:37:20 GMT"/>
									<outline text="try {" created="Mon, 21 Mar 2022 15:37:20 GMT">
										<outline text="thePayload = JSON.parse (jsontext);" created="Mon, 21 Mar 2022 15:37:23 GMT"/>
										<outline text="}" created="Mon, 21 Mar 2022 15:37:39 GMT"/>
										</outline>
									<outline text="catch (err) {" created="Mon, 21 Mar 2022 15:37:40 GMT">
										<outline text="}" created="Mon, 21 Mar 2022 15:37:44 GMT"/>
										</outline>
									<outline text="return (thePayload);" created="Mon, 21 Mar 2022 15:33:05 GMT"/>
									<outline text="}" created="Mon, 21 Mar 2022 15:32:14 GMT"/>
									</outline>
								<outline text="if (evt.data !== undefined) { //no error">
									<outline text="var theCommand = utils.stringNthField (evt.data, &quot;\r&quot;, 1);" created="Mon, 21 Mar 2022 15:34:02 GMT"/>
									<outline text="var jsontext = utils.stringDelete (evt.data, 1, theCommand.length + 1);" created="Mon, 21 Mar 2022 15:35:15 GMT"/>
									<outline text="var thePayload = getPayload (jsontext);" created="Mon, 21 Mar 2022 15:35:39 GMT"/>
									<outline text="console.log (&quot;wsConnectToServer: theCommand == &quot; + theCommand + &quot;, thePayload == &quot; + jsonStringify (thePayload));" isComment="true"/>
									<outline text="switch (theCommand) {" created="Mon, 20 Dec 2021 16:38:54 GMT">
										<outline text="case &quot;newItem&quot;: " created="Mon, 21 Mar 2022 15:30:32 GMT">
											<outline text="itemReceivedCallback (thePayload);" created="Mon, 21 Nov 2022 21:02:53 GMT"/>
											<outline text="break;" created="Mon, 21 Mar 2022 15:30:46 GMT"/>
											</outline>
										<outline text="}" created="Mon, 20 Dec 2021 16:38:58 GMT"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="};"/>
								</outline>
							<outline text="mySocket.onclose = function (evt) {">
								<outline text="mySocket = undefined;"/>
								<outline text="};"/>
								</outline>
							<outline text="mySocket.onerror = function (evt) {">
								<outline text="console.log (&quot;wsConnectToServer: socket received an error.&quot;);" isComment="true" created="Wed, 31 Mar 2021 14:26:24 GMT"/>
								<outline text="};"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}" created="Wed, 29 Sep 2021 16:20:43 GMT"/>
						</outline>
					<outline text="setInterval (checkConnection, 1000);" created="Wed, 29 Sep 2021 16:20:35 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Tue, 22 Nov 2022 22:30:48 GMT"/>
				<outline text="wsConnectUserToServer (function (thePayload) {" created="Tue, 22 Nov 2022 22:07:01 GMT">
					<outline text="console.log (new Date ().toLocaleTimeString () + &quot;: title == &quot; + thePayload.theFeed.title + &quot;, feedUrl == &quot; + thePayload.theFeed.feedUrl);" created="Fri, 08 Jul 2022 21:06:14 GMT"/>
					<outline text="});" created="Tue, 22 Nov 2022 22:07:28 GMT"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Tue, 22 Nov 2022 21:59:57 GMT">
				<outline text="# feedlandSocket" created="Tue, 22 Nov 2022 22:00:00 GMT">
					<outline text="A demo Node.js app that shows you how to tap into &lt;a href=&quot;http://feedland.org/&quot;&gt;FeedLand's&lt;/a&gt; websocket interface." created="Tue, 22 Nov 2022 22:15:16 GMT"/>
					</outline>
				<outline text="### Background" created="Tue, 22 Nov 2022 22:16:00 GMT">
					<outline text="While FeedLand is reading feeds, it's sending a constant stream of JavaScript objects to each user." created="Tue, 22 Nov 2022 22:16:04 GMT"/>
					<outline text="This is how it updates feeds in realtime. " created="Tue, 22 Nov 2022 22:17:06 GMT"/>
					<outline text="This service is also available to applications running in any environment that supports the W3C standard websockets." created="Tue, 22 Nov 2022 22:17:24 GMT"/>
					</outline>
				<outline text="### How to use" created="Tue, 22 Nov 2022 22:17:54 GMT">
					<outline text="Download the repo, run &lt;i&gt;NPM install&lt;/i&gt; in the folder and then run the app." created="Tue, 22 Nov 2022 22:18:02 GMT">
						<outline text="`node feedlandsocket.js`" created="Tue, 22 Nov 2022 22:18:30 GMT"/>
						</outline>
					<outline text="Every time FeedLand finds a new item, you'll get a message over the websocket pipe with a payload that includes the item and information about the feed it came from. " created="Tue, 22 Nov 2022 22:19:12 GMT"/>
					<outline text="The demo app  displays the title of the feed for every new item received, but there's a lot more info in the package that you can use however you like. " created="Tue, 22 Nov 2022 22:21:18 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Tue, 22 Nov 2022 22:00:01 GMT">
			<outline text="nodeEditorSuite.utilities.buildIFeedlandSocket ()" created="Tue, 22 Nov 2022 22:00:04 GMT"/>
			</outline>
		</body>
	</opml>
